ImageRuntimeVersion: v4.0.30319
Assembly CppSharp.Parser.CLI, Version=0.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Interface ICppInstance: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    IntPtr Instance 'get set' : 
  Methods:
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class CppSharp.Parser.AST.Type: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Type*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.Type* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Type*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class CppSharp.Parser.AST.TypeQualifiers: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypeQualifiers*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    Boolean IsRestrict 'get set' : 
    Boolean IsVolatile 'get set' : 
    Boolean IsConst 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.TypeQualifiers* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(TypeQualifiers*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsConst(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConst(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsVolatile(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVolatile(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsRestrict(): PrivateScope, Public, HideBySig, SpecialName
    set_IsRestrict(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.QualifiedType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.QualifiedType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    CppSharp.Parser.AST.TypeQualifiers Qualifiers 'get set' : 
    CppSharp.Parser.AST.Type Type 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.QualifiedType* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(QualifiedType*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_Qualifiers(): PrivateScope, Public, HideBySig, SpecialName
    set_Qualifiers(TypeQualifiers): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TagType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TagType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Declaration Declaration 'get set' : 
  Methods:
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ArrayType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ArrayType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Size 'get set' : 
    ArraySize SizeType 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_SizeType(): PrivateScope, Public, HideBySig, SpecialName
    set_SizeType(ArraySize): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.ArrayType+ArraySize: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ArraySize Constant = 0 : Public, Static, Literal, HasDefault
    ArraySize Variable = 1 : Public, Static, Literal, HasDefault
    ArraySize Dependent = 2 : Public, Static, Literal, HasDefault
    ArraySize Incomplete = 3 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.FunctionType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.CallingConvention CallingConvention 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Parameter] Parameters 'get set' : 
    CppSharp.Parser.AST.QualifiedType ReturnType 'get set' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameters(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_CallingConvention(): PrivateScope, Public, HideBySig, SpecialName
    set_CallingConvention(CallingConvention): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.PointerType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PointerType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    TypeModifier Modifier 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedPointee 'get set' : 
  Methods:
    get_QualifiedPointee(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedPointee(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Modifier(): PrivateScope, Public, HideBySig, SpecialName
    set_Modifier(TypeModifier): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.PointerType+TypeModifier: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    TypeModifier Value = 0 : Public, Static, Literal, HasDefault
    TypeModifier Pointer = 1 : Public, Static, Literal, HasDefault
    TypeModifier LVReference = 2 : Public, Static, Literal, HasDefault
    TypeModifier RVReference = 3 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.MemberPointerType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MemberPointerType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType Pointee 'get set' : 
  Methods:
    get_Pointee(): PrivateScope, Public, HideBySig, SpecialName
    set_Pointee(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TypedefType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypedefType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.TypedefDecl Declaration 'get set' : 
  Methods:
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(TypedefDecl): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DecayedType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DecayedType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType Pointee 'get set' : 
    CppSharp.Parser.AST.QualifiedType Original 'get set' : 
    CppSharp.Parser.AST.QualifiedType Decayed 'get set' : 
  Methods:
    get_Decayed(): PrivateScope, Public, HideBySig, SpecialName
    set_Decayed(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Original(): PrivateScope, Public, HideBySig, SpecialName
    set_Original(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Pointee(): PrivateScope, Public, HideBySig, SpecialName
    set_Pointee(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TemplateArgument: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateArgument*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    Int32 Integral 'get set' : 
    CppSharp.Parser.AST.Declaration Declaration 'get set' : 
    CppSharp.Parser.AST.QualifiedType Type 'get set' : 
    ArgumentKind Kind 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.TemplateArgument* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(TemplateArgument*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(ArgumentKind): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_Integral(): PrivateScope, Public, HideBySig, SpecialName
    set_Integral(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.TemplateArgument+ArgumentKind: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ArgumentKind Type = 0 : Public, Static, Literal, HasDefault
    ArgumentKind Declaration = 1 : Public, Static, Literal, HasDefault
    ArgumentKind NullPtr = 2 : Public, Static, Literal, HasDefault
    ArgumentKind Integral = 3 : Public, Static, Literal, HasDefault
    ArgumentKind Template = 4 : Public, Static, Literal, HasDefault
    ArgumentKind TemplateExpansion = 5 : Public, Static, Literal, HasDefault
    ArgumentKind Expression = 6 : Public, Static, Literal, HasDefault
    ArgumentKind Pack = 7 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.TemplateSpecializationType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateSpecializationType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Type Desugared 'get set' : 
    CppSharp.Parser.AST.Template Template 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.TemplateArgument] Arguments 'get set' : 
  Methods:
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    set_Arguments(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Template(): PrivateScope, Public, HideBySig, SpecialName
    set_Template(Template): PrivateScope, Public, HideBySig, SpecialName
    get_Desugared(): PrivateScope, Public, HideBySig, SpecialName
    set_Desugared(Type): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TemplateParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateParameter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    System.String Name 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.TemplateParameter* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(TemplateParameter*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TemplateParameterType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateParameterType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.TemplateParameter Parameter 'get set' : 
  Methods:
    get_Parameter(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameter(TemplateParameter): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TemplateParameterSubstitutionType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TemplateParameterSubstitutionType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType Replacement 'get set' : 
  Methods:
    get_Replacement(): PrivateScope, Public, HideBySig, SpecialName
    set_Replacement(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.InjectedClassNameType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.InjectedClassNameType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Class Class 'get set' : 
    CppSharp.Parser.AST.TemplateSpecializationType TemplateSpecialization 'get set' : 
  Methods:
    get_TemplateSpecialization(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplateSpecialization(TemplateSpecializationType): PrivateScope, Public, HideBySig, SpecialName
    get_Class(): PrivateScope, Public, HideBySig, SpecialName
    set_Class(Class): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DependentNameType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DependentNameType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class CppSharp.Parser.AST.BuiltinType: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Type
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BuiltinType*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.PrimitiveType Type 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(PrimitiveType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.RawComment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.RawComment*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    System.String BriefText 'get set' : 
    System.String Text 'get set' : 
    CppSharp.Parser.AST.RawCommentKind Kind 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.RawComment* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(RawComment*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(RawCommentKind): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_BriefText(): PrivateScope, Public, HideBySig, SpecialName
    set_BriefText(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.VTableComponent: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VTableComponent*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    CppSharp.Parser.AST.Declaration Declaration 'get set' : 
    UInt32 Offset 'get set' : 
    CppSharp.Parser.AST.VTableComponentKind Kind 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.VTableComponent* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(VTableComponent*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(VTableComponentKind): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Declaration(): PrivateScope, Public, HideBySig, SpecialName
    set_Declaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.VTableLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VTableLayout*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    System.Collections.Generic.List`1[CppSharp.Parser.AST.VTableComponent] Components 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.VTableLayout* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(VTableLayout*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Components(): PrivateScope, Public, HideBySig, SpecialName
    set_Components(List`1): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.VFTableInfo: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.VFTableInfo*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    CppSharp.Parser.AST.VTableLayout Layout 'get set' : 
    UInt32 VFPtrFullOffset 'get set' : 
    UInt32 VFPtrOffset 'get set' : 
    UInt64 VBTableIndex 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.VFTableInfo* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(VFTableInfo*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_VBTableIndex(): PrivateScope, Public, HideBySig, SpecialName
    set_VBTableIndex(UInt64): PrivateScope, Public, HideBySig, SpecialName
    get_VFPtrOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_VFPtrOffset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_VFPtrFullOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_VFPtrFullOffset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(VTableLayout): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ClassLayout: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassLayout*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    Int32 DataSize 'get set' : 
    Int32 Size 'get set' : 
    Int32 Alignment 'get set' : 
    Int32 VBPtrOffset 'get set' : 
    Boolean HasOwnVFPtr 'get set' : 
    CppSharp.Parser.AST.VTableLayout Layout 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.VFTableInfo] VFTables 'get set' : 
    CppSharp.Parser.AST.CppAbi ABI 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.ClassLayout* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ClassLayout*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ABI(): PrivateScope, Public, HideBySig, SpecialName
    set_ABI(CppAbi): PrivateScope, Public, HideBySig, SpecialName
    get_VFTables(): PrivateScope, Public, HideBySig, SpecialName
    set_VFTables(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(VTableLayout): PrivateScope, Public, HideBySig, SpecialName
    get_HasOwnVFPtr(): PrivateScope, Public, HideBySig, SpecialName
    set_HasOwnVFPtr(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_VBPtrOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_VBPtrOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Alignment(): PrivateScope, Public, HideBySig, SpecialName
    set_Alignment(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_DataSize(): PrivateScope, Public, HideBySig, SpecialName
    set_DataSize(Int32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Declaration: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Declaration*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    IntPtr OriginalPtr 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.PreprocessedEntity] PreprocessedEntities 'get set' : 
    UInt32 DefinitionOrder 'get set' : 
    CppSharp.Parser.AST.Declaration CompleteDeclaration 'get set' : 
    Boolean IsDependent 'get set' : 
    Boolean IsIncomplete 'get set' : 
    System.String DebugText 'get set' : 
    CppSharp.Parser.AST.RawComment Comment 'get set' : 
    System.String Name 'get set' : 
    CppSharp.Parser.AST.DeclarationContext _Namespace 'get set' : 
    CppSharp.Parser.AST.AccessSpecifier Access 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.Declaration* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(Declaration*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Access(): PrivateScope, Public, HideBySig, SpecialName
    set_Access(AccessSpecifier): PrivateScope, Public, HideBySig, SpecialName
    get__Namespace(): PrivateScope, Public, HideBySig, SpecialName
    set__Namespace(DeclarationContext): PrivateScope, Public, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Comment(): PrivateScope, Public, HideBySig, SpecialName
    set_Comment(RawComment): PrivateScope, Public, HideBySig, SpecialName
    get_DebugText(): PrivateScope, Public, HideBySig, SpecialName
    set_DebugText(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsIncomplete(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIncomplete(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDependent(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDependent(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CompleteDeclaration(): PrivateScope, Public, HideBySig, SpecialName
    set_CompleteDeclaration(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_DefinitionOrder(): PrivateScope, Public, HideBySig, SpecialName
    set_DefinitionOrder(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_PreprocessedEntities(): PrivateScope, Public, HideBySig, SpecialName
    set_PreprocessedEntities(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_OriginalPtr(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginalPtr(IntPtr): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.DeclarationContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.DeclarationContext*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Variable] Variables 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.TypedefDecl] Typedefs 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Template] Templates 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Class] Classes 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Function] Functions 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Enumeration] Enums 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Namespace] Namespaces 'get set' : 
  Methods:
    get_Namespaces(): PrivateScope, Public, HideBySig, SpecialName
    set_Namespaces(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Enums(): PrivateScope, Public, HideBySig, SpecialName
    set_Enums(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Functions(): PrivateScope, Public, HideBySig, SpecialName
    set_Functions(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Classes(): PrivateScope, Public, HideBySig, SpecialName
    set_Classes(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Templates(): PrivateScope, Public, HideBySig, SpecialName
    set_Templates(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Typedefs(): PrivateScope, Public, HideBySig, SpecialName
    set_Typedefs(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Variables(): PrivateScope, Public, HideBySig, SpecialName
    set_Variables(List`1): PrivateScope, Public, HideBySig, SpecialName
    FindAnonymous(UInt64): PrivateScope, Public, HideBySig
    FindNamespace(List`1): PrivateScope, Public, HideBySig
    FindNamespace(String): PrivateScope, Public, HideBySig
    FindCreateNamespace(String): PrivateScope, Public, HideBySig
    CreateClass(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    FindClass(String, Boolean(HasFieldMarshal), Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    FindClass(String): PrivateScope, Public, HideBySig
    FindEnum(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    FindFunction(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    FindTypedef(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
Class CppSharp.Parser.AST.TypedefDecl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TypedefDecl*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Parameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Parameter*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean HasDefaultValue 'get set' : 
    Boolean IsIndirect 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_IsIndirect(): PrivateScope, Public, HideBySig, SpecialName
    set_IsIndirect(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasDefaultValue(): PrivateScope, Public, HideBySig, SpecialName
    set_HasDefaultValue(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Function: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Function*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Parameter] Parameters 'get set' : 
    CppSharp.Parser.AST.CallingConvention CallingConvention 'get set' : 
    System.String Signature 'get set' : 
    System.String Mangled 'get set' : 
    CppSharp.Parser.AST.CXXOperatorKind OperatorKind 'get set' : 
    Boolean IsDeleted 'get set' : 
    Boolean IsPure 'get set' : 
    Boolean IsInline 'get set' : 
    Boolean IsVariadic 'get set' : 
    Boolean IsReturnIndirect 'get set' : 
    CppSharp.Parser.AST.QualifiedType ReturnType 'get set' : 
  Methods:
    get_ReturnType(): PrivateScope, Public, HideBySig, SpecialName
    set_ReturnType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_IsReturnIndirect(): PrivateScope, Public, HideBySig, SpecialName
    set_IsReturnIndirect(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsVariadic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVariadic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsInline(): PrivateScope, Public, HideBySig, SpecialName
    set_IsInline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPure(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPure(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDeleted(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDeleted(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OperatorKind(): PrivateScope, Public, HideBySig, SpecialName
    set_OperatorKind(CXXOperatorKind): PrivateScope, Public, HideBySig, SpecialName
    get_Mangled(): PrivateScope, Public, HideBySig, SpecialName
    set_Mangled(String): PrivateScope, Public, HideBySig, SpecialName
    get_Signature(): PrivateScope, Public, HideBySig, SpecialName
    set_Signature(String): PrivateScope, Public, HideBySig, SpecialName
    get_CallingConvention(): PrivateScope, Public, HideBySig, SpecialName
    set_CallingConvention(CallingConvention): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameters(List`1): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Method: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Function
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Method*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsMoveConstructor 'get set' : 
    Boolean IsCopyConstructor 'get set' : 
    Boolean IsDefaultConstructor 'get set' : 
    CppSharp.Parser.AST.CXXMethodKind Kind 'get set' : 
    Boolean IsOverride 'get set' : 
    Boolean IsImplicit 'get set' : 
    Boolean IsConst 'get set' : 
    Boolean IsStatic 'get set' : 
    Boolean IsVirtual 'get set' : 
    CppSharp.Parser.AST.AccessSpecifierDecl AccessDecl 'get set' : 
  Methods:
    get_AccessDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_AccessDecl(AccessSpecifierDecl): PrivateScope, Public, HideBySig, SpecialName
    get_IsVirtual(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVirtual(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsStatic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsStatic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsConst(): PrivateScope, Public, HideBySig, SpecialName
    set_IsConst(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsImplicit(): PrivateScope, Public, HideBySig, SpecialName
    set_IsImplicit(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsOverride(): PrivateScope, Public, HideBySig, SpecialName
    set_IsOverride(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(CXXMethodKind): PrivateScope, Public, HideBySig, SpecialName
    get_IsDefaultConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDefaultConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsCopyConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_IsCopyConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsMoveConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_IsMoveConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Enumeration: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Enumeration*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Enumeration+Item] Items 'get set' : 
    CppSharp.Parser.AST.BuiltinType BuiltinType 'get set' : 
    CppSharp.Parser.AST.Type Type 'get set' : 
    EnumModifiers Modifiers 'get set' : 
  Methods:
    get_Modifiers(): PrivateScope, Public, HideBySig, SpecialName
    set_Modifiers(EnumModifiers): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
    get_BuiltinType(): PrivateScope, Public, HideBySig, SpecialName
    set_BuiltinType(BuiltinType): PrivateScope, Public, HideBySig, SpecialName
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
    set_Items(List`1): PrivateScope, Public, HideBySig, SpecialName
Struct CppSharp.Parser.AST.Enumeration+EnumModifiers: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EnumModifiers Anonymous = 1 : Public, Static, Literal, HasDefault
    EnumModifiers Scoped = 2 : Public, Static, Literal, HasDefault
    EnumModifiers Flags = 4 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.AST.Enumeration+Item: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Item*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt64 Value 'get set' : 
    System.String Comment 'get set' : 
    System.String Expression 'get set' : 
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    set_Expression(String): PrivateScope, Public, HideBySig, SpecialName
    get_Comment(): PrivateScope, Public, HideBySig, SpecialName
    set_Comment(String): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(UInt64): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Variable: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Variable*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
    System.String Mangled 'get set' : 
  Methods:
    get_Mangled(): PrivateScope, Public, HideBySig, SpecialName
    set_Mangled(String): PrivateScope, Public, HideBySig, SpecialName
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.BaseClassSpecifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.BaseClassSpecifier*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    CppSharp.Parser.AST.Type Type 'get set' : 
    Boolean IsVirtual 'get set' : 
    CppSharp.Parser.AST.AccessSpecifier Access 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.BaseClassSpecifier* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(BaseClassSpecifier*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Access(): PrivateScope, Public, HideBySig, SpecialName
    set_Access(AccessSpecifier): PrivateScope, Public, HideBySig, SpecialName
    get_IsVirtual(): PrivateScope, Public, HideBySig, SpecialName
    set_IsVirtual(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(Type): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Field: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Field*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.Class Class 'get set' : 
    UInt32 Offset 'get set' : 
    CppSharp.Parser.AST.AccessSpecifier Access 'get set' : 
    CppSharp.Parser.AST.QualifiedType QualifiedType 'get set' : 
  Methods:
    get_QualifiedType(): PrivateScope, Public, HideBySig, SpecialName
    set_QualifiedType(QualifiedType): PrivateScope, Public, HideBySig, SpecialName
    get_Access(): PrivateScope, Public, HideBySig, SpecialName
    set_Access(AccessSpecifier): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(UInt32): PrivateScope, Public, HideBySig, SpecialName
    get_Class(): PrivateScope, Public, HideBySig, SpecialName
    set_Class(Class): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.AccessSpecifierDecl: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.AccessSpecifierDecl*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class CppSharp.Parser.AST.Class: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.DeclarationContext
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Class*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.ClassLayout Layout 'get set' : 
    Boolean HasNonTrivialCopyConstructor 'get set' : 
    Boolean HasNonTrivialDefaultConstructor 'get set' : 
    Boolean IsPolymorphic 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean IsUnion 'get set' : 
    Boolean IsAbstract 'get set' : 
    Boolean IsPOD 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.AccessSpecifierDecl] Specifiers 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Method] Methods 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Field] Fields 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.BaseClassSpecifier] Bases 'get set' : 
  Methods:
    get_Bases(): PrivateScope, Public, HideBySig, SpecialName
    set_Bases(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Fields(): PrivateScope, Public, HideBySig, SpecialName
    set_Fields(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Methods(): PrivateScope, Public, HideBySig, SpecialName
    set_Methods(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Specifiers(): PrivateScope, Public, HideBySig, SpecialName
    set_Specifiers(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_IsPOD(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPOD(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsAbstract(): PrivateScope, Public, HideBySig, SpecialName
    set_IsAbstract(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsUnion(): PrivateScope, Public, HideBySig, SpecialName
    set_IsUnion(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsPolymorphic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsPolymorphic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasNonTrivialDefaultConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_HasNonTrivialDefaultConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasNonTrivialCopyConstructor(): PrivateScope, Public, HideBySig, SpecialName
    set_HasNonTrivialCopyConstructor(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Layout(): PrivateScope, Public, HideBySig, SpecialName
    set_Layout(ClassLayout): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.Template: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Template*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[CppSharp.Parser.AST.TemplateParameter] Parameters 'get set' : 
    CppSharp.Parser.AST.Declaration TemplatedDecl 'get set' : 
  Methods:
    get_TemplatedDecl(): PrivateScope, Public, HideBySig, SpecialName
    set_TemplatedDecl(Declaration): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    set_Parameters(List`1): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ClassTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Template
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassTemplate*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class CppSharp.Parser.AST.ClassTemplateSpecialization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassTemplateSpecialization*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class CppSharp.Parser.AST.ClassTemplatePartialSpecialization: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ClassTemplatePartialSpecialization*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class CppSharp.Parser.AST.FunctionTemplate: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Template
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.FunctionTemplate*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class CppSharp.Parser.AST.Namespace: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.DeclarationContext
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.Namespace*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class CppSharp.Parser.AST.PreprocessedEntity: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Declaration
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.PreprocessedEntity*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.MacroLocation Location 'get set' : 
  Methods:
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(MacroLocation): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.MacroDefinition: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.PreprocessedEntity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MacroDefinition*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Expression 'get set' : 
  Methods:
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    set_Expression(String): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.MacroExpansion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.PreprocessedEntity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.MacroExpansion*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    CppSharp.Parser.AST.MacroDefinition Definition 'get set' : 
    System.String Text 'get set' : 
  Methods:
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Definition(): PrivateScope, Public, HideBySig, SpecialName
    set_Definition(MacroDefinition): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.TranslationUnit: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CppSharp.Parser.AST.Namespace
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.TranslationUnit*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.List`1[CppSharp.Parser.AST.MacroDefinition] Macros 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.AST.Namespace] Namespaces 'get set' : 
    Boolean IsSystemHeader 'get set' : 
    System.String FileName 'get set' : 
  Methods:
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsSystemHeader(): PrivateScope, Public, HideBySig, SpecialName
    set_IsSystemHeader(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Namespaces(): PrivateScope, Public, HideBySig, SpecialName
    set_Namespaces(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Macros(): PrivateScope, Public, HideBySig, SpecialName
    set_Macros(List`1): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.NativeLibrary: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.NativeLibrary*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    System.Collections.Generic.List`1[System.String] Symbols 'get set' : 
    System.String FileName 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.NativeLibrary* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(NativeLibrary*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Symbols(): PrivateScope, Public, HideBySig, SpecialName
    set_Symbols(List`1): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.AST.ASTContext: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.AST.ASTContext*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    System.Collections.Generic.List`1[CppSharp.Parser.AST.TranslationUnit] TranslationUnits 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.AST.ASTContext* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ASTContext*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_TranslationUnits(): PrivateScope, Public, HideBySig, SpecialName
    set_TranslationUnits(List`1): PrivateScope, Public, HideBySig, SpecialName
    FindOrCreateModule(String): PrivateScope, Public, HideBySig
Struct CppSharp.Parser.AST.AccessSpecifier: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.AccessSpecifier Private = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.AccessSpecifier Protected = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.AccessSpecifier Public = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CXXMethodKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CXXMethodKind Normal = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind Constructor = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind Destructor = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind Conversion = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind Operator = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXMethodKind UsingDirective = 5 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CXXOperatorKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CXXOperatorKind None = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind New = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Delete = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Array_New = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Array_Delete = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Plus = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Minus = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Star = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Slash = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Percent = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Caret = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Amp = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Pipe = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Tilde = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Exclaim = 14 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Equal = 15 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Less = 16 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Greater = 17 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PlusEqual = 18 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind MinusEqual = 19 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind StarEqual = 20 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind SlashEqual = 21 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PercentEqual = 22 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind CaretEqual = 23 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind AmpEqual = 24 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PipeEqual = 25 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind LessLess = 26 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind GreaterGreater = 27 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind LessLessEqual = 28 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind GreaterGreaterEqual = 29 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind EqualEqual = 30 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind ExclaimEqual = 31 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind LessEqual = 32 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind GreaterEqual = 33 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind AmpAmp = 34 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PipePipe = 35 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind PlusPlus = 36 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind MinusMinus = 37 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Comma = 38 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind ArrowStar = 39 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Arrow = 40 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Call = 41 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Subscript = 42 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CXXOperatorKind Conditional = 43 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CallingConvention: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CallingConvention Default = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention C = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention StdCall = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention ThisCall = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention FastCall = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CallingConvention Unknown = 5 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.CppAbi: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.CppAbi Itanium = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CppAbi Microsoft = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.CppAbi ARM = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.VTableComponentKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.VTableComponentKind VCallOffset = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind VBaseOffset = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind OffsetToTop = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind RTTI = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind FunctionPointer = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind CompleteDtorPointer = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind DeletingDtorPointer = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.VTableComponentKind UnusedFunctionPointer = 7 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.PrimitiveType: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.PrimitiveType Null = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Void = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Bool = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType WideChar = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Int8 = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Char = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UInt8 = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UChar = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Int16 = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UInt16 = 7 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Int32 = 8 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UInt32 = 9 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Int64 = 10 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType UInt64 = 11 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Float = 12 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType Double = 13 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.PrimitiveType IntPtr = 14 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.RawCommentKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.RawCommentKind Invalid = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind OrdinaryBCPL = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind OrdinaryC = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind BCPLSlash = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind BCPLExcl = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind JavaDoc = 5 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind Qt = 6 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.RawCommentKind Merged = 7 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.AST.MacroLocation: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.AST.MacroLocation Unknown = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation ClassHead = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation ClassBody = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation FunctionHead = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation FunctionParameters = 4 : Public, Static, Literal, HasDefault
    CppSharp.Parser.AST.MacroLocation FunctionBody = 5 : Public, Static, Literal, HasDefault
Class CppSharp.Parser.ParserOptions: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ParserOptions*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    Boolean Verbose 'get set' : 
    Boolean MicrosoftMode 'get set' : 
    Boolean NoBuiltinIncludes 'get set' : 
    Boolean NoStandardIncludes 'get set' : 
    CppSharp.Parser.AST.CppAbi Abi 'get set' : 
    System.String TargetTriple 'get set' : 
    Int32 ToolSetToUse 'get set' : 
    CppSharp.Parser.AST.ASTContext ASTContext 'get set' : 
    System.Collections.Generic.List`1[System.String] LibraryDirs 'get set' : 
    System.Collections.Generic.List`1[System.String] Defines 'get set' : 
    System.Collections.Generic.List`1[System.String] SystemIncludeDirs 'get set' : 
    System.Collections.Generic.List`1[System.String] IncludeDirs 'get set' : 
    System.String FileName 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.ParserOptions* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ParserOptions*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IncludeDirs(): PrivateScope, Public, HideBySig, SpecialName
    set_IncludeDirs(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_SystemIncludeDirs(): PrivateScope, Public, HideBySig, SpecialName
    set_SystemIncludeDirs(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_Defines(): PrivateScope, Public, HideBySig, SpecialName
    set_Defines(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_LibraryDirs(): PrivateScope, Public, HideBySig, SpecialName
    set_LibraryDirs(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ASTContext(): PrivateScope, Public, HideBySig, SpecialName
    set_ASTContext(ASTContext): PrivateScope, Public, HideBySig, SpecialName
    get_ToolSetToUse(): PrivateScope, Public, HideBySig, SpecialName
    set_ToolSetToUse(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_TargetTriple(): PrivateScope, Public, HideBySig, SpecialName
    set_TargetTriple(String): PrivateScope, Public, HideBySig, SpecialName
    get_Abi(): PrivateScope, Public, HideBySig, SpecialName
    set_Abi(CppAbi): PrivateScope, Public, HideBySig, SpecialName
    get_NoStandardIncludes(): PrivateScope, Public, HideBySig, SpecialName
    set_NoStandardIncludes(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_NoBuiltinIncludes(): PrivateScope, Public, HideBySig, SpecialName
    set_NoBuiltinIncludes(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MicrosoftMode(): PrivateScope, Public, HideBySig, SpecialName
    set_MicrosoftMode(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Verbose(): PrivateScope, Public, HideBySig, SpecialName
    set_Verbose(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.ParserDiagnostic: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ParserDiagnostic*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    Int32 ColumnNumber 'get set' : 
    Int32 LineNumber 'get set' : 
    CppSharp.Parser.ParserDiagnosticLevel Level 'get set' : 
    System.String Message 'get set' : 
    System.String FileName 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.ParserDiagnostic* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ParserDiagnostic*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Message(): PrivateScope, Public, HideBySig, SpecialName
    set_Message(String): PrivateScope, Public, HideBySig, SpecialName
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    set_Level(ParserDiagnosticLevel): PrivateScope, Public, HideBySig, SpecialName
    get_LineNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_LineNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ColumnNumber(): PrivateScope, Public, HideBySig, SpecialName
    set_ColumnNumber(Int32): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.ParserResult: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ParserResult*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    CppSharp.Parser.AST.NativeLibrary Library 'get set' : 
    CppSharp.Parser.AST.ASTContext ASTContext 'get set' : 
    System.Collections.Generic.List`1[CppSharp.Parser.ParserDiagnostic] Diagnostics 'get set' : 
    CppSharp.Parser.ParserResultKind Kind 'get set' : 
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.ParserResult* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ParserResult*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Kind(): PrivateScope, Public, HideBySig, SpecialName
    set_Kind(ParserResultKind): PrivateScope, Public, HideBySig, SpecialName
    get_Diagnostics(): PrivateScope, Public, HideBySig, SpecialName
    set_Diagnostics(List`1): PrivateScope, Public, HideBySig, SpecialName
    get_ASTContext(): PrivateScope, Public, HideBySig, SpecialName
    set_ASTContext(ASTContext): PrivateScope, Public, HideBySig, SpecialName
    get_Library(): PrivateScope, Public, HideBySig, SpecialName
    set_Library(NativeLibrary): PrivateScope, Public, HideBySig, SpecialName
Class CppSharp.Parser.ClangParser: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CppSharp.CppParser.ClangParser*): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    ICppInstance
  Properties:
    IntPtr Instance 'get set' : 
    CppSharp.CppParser.ClangParser* NativePtr 'get set' : 
  Methods:
    get_NativePtr(): PrivateScope, Public, HideBySig, SpecialName
    set_NativePtr(ClangParser*): PrivateScope, Public, HideBySig, SpecialName
    get_Instance(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Instance(IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ParseHeader(ParserOptions): PrivateScope, Public, Static, HideBySig
    ParseLibrary(ParserOptions): PrivateScope, Public, Static, HideBySig
Struct CppSharp.Parser.ParserDiagnosticLevel: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.ParserDiagnosticLevel Ignored = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserDiagnosticLevel Note = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserDiagnosticLevel Warning = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserDiagnosticLevel Error = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserDiagnosticLevel Fatal = 4 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.ParserResultKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.ParserResultKind Success = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserResultKind Error = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.ParserResultKind FileNotFound = 2 : Public, Static, Literal, HasDefault
Struct CppSharp.Parser.SourceLocationKind: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CppSharp.Parser.SourceLocationKind Invalid = 0 : Public, Static, Literal, HasDefault
    CppSharp.Parser.SourceLocationKind Builtin = 1 : Public, Static, Literal, HasDefault
    CppSharp.Parser.SourceLocationKind CommandLine = 2 : Public, Static, Literal, HasDefault
    CppSharp.Parser.SourceLocationKind System = 3 : Public, Static, Literal, HasDefault
    CppSharp.Parser.SourceLocationKind User = 4 : Public, Static, Literal, HasDefault
